{"version":3,"sources":["components/Container/Container.styles.jsx","components/Container/Container.js","components/Button/Button.styled.jsx","components/Button/Button.js","components/Form/Form.styled.jsx","components/Form/Form.js","components/Contact/ContactList.styled.jsx","components/Contact/ContactList.js","components/Contact/Contact.js","components/Filter/Filter.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","children","Button","button","ButtonItem","text","type","FormItem","form","Input","input","Form","getData","useState","name","setName","id","setId","number","setNumber","handleChange","target","value","randomId","uuidv4","slice","resetForm","onSubmit","e","preventDefault","onChange","pattern","title","required","placeholder","ContactList","data","onDeleteNameItem","map","onClick","Contact","Filter","filter","App","key","defaultValue","JSON","parse","window","localStorage","getItem","useLocalStorage","contacts","setContacts","setFilter","useEffect","setItem","stringify","array","updateContacts","newData","console","log","some","item","alert","prevState","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"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","file":"static/js/main.1ac91367.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding:20px 20px; \r\n`","import { Wrapper } from \"./Container.styles\"\r\n\r\nexport const Container = ({children}) => {\r\n    return (\r\n        <Wrapper>{children}</Wrapper>\r\n    )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\nwidth:120px\r\n`","import { Button } from \"./Button.styled\";\r\n\r\nfunction ButtonItem({ text }) {\r\n  return <Button type=\"submit\">{text}</Button>;\r\n}\r\n\r\nexport default ButtonItem;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FormItem = styled.form`\r\ndisplay:flex;\r\nflex-direction:column;\r\nwidth:250px\r\n`\r\nexport const Input = styled.input`\r\nmargin-bottom: 20px;\r\n\r\n`","// import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\nimport ButtonItem from '../Button';\r\nimport PropTypes from 'prop-types';\r\n// style\r\nimport { FormItem, Input } from './Form.styled.jsx';\r\n\r\nexport default function Form({ getData }) {\r\n  const [name, setName] = useState('');\r\n  const [id, setId] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    const randomId = uuidv4().slice(0, 5);\r\n\r\n    setId(randomId);\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contactData = {\r\n      name: name,\r\n      id: id,\r\n      number: number,\r\n    };\r\n    getData(contactData);\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setId('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <FormItem onSubmit={handleSubmit}>\r\n          <Input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            placeholder=\"Name\"\r\n          />\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            placeholder=\"Phone number\"\r\n          />\r\n          <ButtonItem text=\"Add contact\" />\r\n        </FormItem>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  handleChange: PropTypes.func,\r\n  getData: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  resetForm: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\nmargin-left:20px\r\n`","import { Button } from \"./ContactList.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactList({ data, onDeleteNameItem }) {\r\n  return (\r\n    <>\r\n      {data.map(({ name, id, number }) => (\r\n        <li key={id}>\r\n          {name} : {number}\r\n          <Button onClick={() => onDeleteNameItem(id)}>Delete</Button>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import ContactList from \"./ContactList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Contact({ data, onDeleteNameItem }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <ContactList\r\n          data={data}\r\n          onDeleteNameItem={onDeleteNameItem}\r\n        ></ContactList>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  data: PropTypes.array,\r\n  onDeleteNameItem: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  return (\r\n    <>\r\n      <p>Find Contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\nexport default Filter;\r\n","import { Container } from './components/Container/Container';\r\nimport { useState, useEffect } from 'react';\r\nimport Form from './components/Form';\r\nimport Contact from './components/Contact';\r\nimport Filter from './components/Filter';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const getData = ({ name, id, number }) => {\r\n    const newContacts = {\r\n      name,\r\n      id,\r\n      number,\r\n    };\r\n    updateContacts(newContacts);\r\n  };\r\n\r\n  const updateContacts = newData => {\r\n    console.log(contacts);\r\n    contacts.some(item => item.name === newData.name)\r\n      ? alert(`${newData.name} is already in contacts`)\r\n      : setContacts(prevState => [...prevState, newData]);\r\n  };\r\n\r\n  const handleFilterByName = e => setFilter(e.target.value);\r\n\r\n  const renderListName = (array, name) => {\r\n    return array.filter(item => item.name.toLowerCase().includes(name.toLowerCase()));\r\n  };\r\n\r\n  const deleteNameItem = id => {\r\n    setContacts(prevState => prevState.filter(item => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Phonebook</h2>\r\n      <Form getData={getData} />\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} onChange={handleFilterByName} />\r\n      <Contact data={renderListName(contacts, filter)} onDeleteNameItem={deleteNameItem}></Contact>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}